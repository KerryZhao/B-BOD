<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize code here
targetsNeeded = 0;
targetsNeededtext = 0;
targetsHit = 0;
ballsdestroyed = 0;
cusScore = 0;
win = false;
ingame = false;
width = 200;
height = 100;
ammoSize = 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Lose a ball</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///increment score and decrement targets needed
ballsdestroyed++;
ammoIcons--;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for end game
if(ballsdestroyed==targetsNeeded+2 &amp;&amp; ingame == true)
{
   room_goto(rm_scoreScreen);
   ingame = false;
}

if(targetsHit == targetsNeeded )
{
    win = true;
}
if(win == true &amp;&amp;ingame == true)
{
   room_goto(rm_scoreScreen);
   ingame = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///when the room starts and it needs to reset 
///set the values if they are at zero ATM
if(instance_exists(obj_target)==true)
{
    
    if(targetsNeeded==0)
    {
        targetsNeeded = instance_number(obj_target);
         targetsNeededtext = instance_number(obj_target);
         obj_singlePlayer.ammunition = targetsNeeded + 2;
         ingame = true;
         ammoIcons = obj_singlePlayer.ammunition;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>font</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>fnt_plasticLg</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Text that say how many targets need to be hit and how many we have hit
if(ingame == true)
{
    draw_set_alpha(0.5);
    draw_rectangle_colour(0, 0, width, height, c_ltgray, c_ltgray, c_ltgray, c_ltgray, false);
    draw_set_alpha(1);
    text1 = "Targets Needed: " + string(obj_singlePlayermanager.targetsNeededtext);
    draw_text(0, 0, text1);
    text2 = "Targets Hit: " + string(obj_singlePlayermanager.targetsHit);
    draw_text(0,20,text2);   
    with(obj_timer)
    {
      event_user(0);
    }
     text3 = "Time: " + string(obj_timer.minutes)+ "." + string(obj_timer.seconds);
    draw_text(0,40,text3);
    text4 = "Score: " + string(obj_singlePlayermanager.cusScore);
    draw_text(100,40,text4);
    var drawX = 0;
    var drawY = 60;
    for(var i=0;i&lt;ammoIcons;i++){
        draw_ellipse_colour(drawX, drawY, drawX+ammoSize, drawY+ammoSize, c_white, c_white, false);
        drawX += ammoSize *1.5;
        if(drawX+ammoSize&gt;=width){
            drawY += ammoSize * 1.5;
            drawX = 0;
        }
    }
}
//Say whether or not we win or lose base on bool 
if(win == true &amp;&amp; room_get_name(room)=="rm_scoreScreen")
{
 x = display_get_width()/4;
 y = display_get_height()/4;
 draw_text_transformed(x, y, "You win", 5, 5, 0);
 draw_text_transformed(x+50,y+100,"Time: " + string(obj_timer.minutes)+ "." + string(obj_timer.seconds),3,3,0);
 draw_text_transformed(x+50,y+150,"Score: " + string(obj_singlePlayermanager.cusScore),3,3,0);
}
else if(win == false &amp;&amp; room_get_name(room)=="rm_scoreScreen")
{
 x = display_get_width()/4;
 y = display_get_height()/4;
 draw_text_transformed(x, y, "You lose", 5, 5, 0);
 draw_text_transformed(x+50,y+100,"Time: " + string(obj_timer.minutes)+ "." + string(obj_timer.seconds),3,3,0);
 draw_text_transformed(x+50,y+150,"Score: " + string(obj_singlePlayermanager.cusScore),3,3,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
