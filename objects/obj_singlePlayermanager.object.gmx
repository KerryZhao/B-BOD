<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize code here
targetsNeeded = 0;
targetsNeededtext = 0;
targetsHit = 0;
ammunition = 0;
ballsdestroyed = 0;
cusScore = 0;
win = false;
ingame = true;
//tell targetsNeeded how many targets there are 
targetsNeeded = instance_number(obj_target);
targetsNeededtext = instance_number(obj_target);
ammunition = targetsNeeded + 2;
ammoIcons = ds_list_create();
for(x=0;x&lt;ammunition;x++)
{ 
ds_list_add(ammoIcons, instance_create((16*x)+16,50,obj_ammoIcon));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check on whether or not targetsHit is the same as targetsNeeded
show_debug_message(ballsdestroyed);
if(ballsdestroyed==targetsNeeded+2 &amp;&amp; ingame == true)
{
   room_goto(rm_scoreScreen);
   ingame = false;
}

if(targetsHit == targetsNeeded )
{
    win = true;
}
if(win == true &amp;&amp; ingame == true)
{
   room_goto(rm_scoreScreen);
   ingame = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Text that say how many targets need to be hit and how many we have hit
if(ingame == true)
{
    text1 = "Targets Needed: " + string(obj_singlePlayermanager.targetsNeededtext);
    draw_text(0, 0, text1);
    text2 = "Targets Hit: " + string(obj_singlePlayermanager.targetsHit);
    draw_text(0,20,text2);
}
//Say whether or not we win or lose base on bool 
if(win == true &amp;&amp; room_get_name(room)=="rm_scoreScreen")
{
 draw_text(50,50,"You win");
}
else if(win == false &amp;&amp; room_get_name(room)=="rm_scoreScreen")
{
 draw_text(50,50,"You lose");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
